# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HXEm6KtYXMXkMEX9QDvDyf1DFsdwp16_

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
t71 = prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject rdfs:subClassOf* ns:LivingThing.
  }
  ''',
    initNs={'rdfs':RDFS, "ns":ns}
)
# Visualize the results

for r in g.query(t71):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

t72 = prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject rdf:type ?class .
    ?class rdfs:subClassOf* ns:Person
  }
  ''',
    initNs={'rdfs':RDFS,'ns':ns}
)

# Visualize the results
for r in g.query(t72):
  print(r)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

t73 = prepareQuery('''
  SELECT ?Subject WHERE {
    {?Subject rdf:type ns:Person} UNION
    {?Subject rdf:type ns:Animal}
  }
  ''',
    initNs={'rdfs':RDFS, "ns":ns}
)

# Visualize the results
for r in g.query(t73):
  print(r)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

from rdflib import FOAF
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")

t74 = prepareQuery('''
  SELECT ?name WHERE {
    ?Subject foaf:knows ns:RockySmith .
    ?Subject vcard:FN ?name .
  }
  ''',
    initNs={"ns":ns, "foaf":FOAF, "vcard" : VCARD}
)

# Visualize the results
for r in g.query(t74):
    print(r.name)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
t75 = prepareQuery('''
  SELECT ?name WHERE {
    ?Subject a ns:Animal .
    ?Subject foaf:knows ?Subject2 .
    ?Subject2 a ns:Animal .
    ?Subject vcard:Given ?name
  }
  ''',
    initNs={'rdfs':RDFS, "ns":ns, 'foaf': FOAF,'vcard':VCARD}
)

# Visualize the results
for r in g.query(t75):
    print(r.name)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

t76 = prepareQuery('''
  SELECT ?age WHERE {
    ?class rdfs:subClassOf* ns:LivingThing .
    ?alive rdf:type ?class .
    ?alive foaf:age ?age
  }
  ORDER BY DESC(?age)
  ''',
  initNs={"ns": ns, "vcard": VCARD, "foaf": FOAF}
)

# Visualize the results
for r in g.query(t76):
  print(r.age)