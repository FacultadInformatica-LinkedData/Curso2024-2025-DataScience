# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oC7v7b0XrlRs1iwv_4cXJrResIJnQoJ-

**Task 06: Modifying RDF(s)**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""
!pip install rdflib
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.1: Create a new class named "University"**

"""

ns1 = Namespace('http://somewhere#')
g.add((ns1.University, RDF.type, RDFS.Class))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

ns2 = Namespace('http://somewhere#')
g.add((ns2.Person, RDF.type, RDFS.Class))
g.add((ns.Researcher,RDFS.subClassOf, ns2.Person))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""

fullname = Literal('Jane Smithers')
EX = Namespace('http://somewhere#')
UriJane = EX.JaneSmithers
g.add((UriJane, RDF.type, ns.Researcher))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

email = Literal('Jane.Smithers@example.com')
fullName = Literal('Jane Smithers')
givenname = Literal('Jane')
familyname = Literal('Smithers')
EX = Namespace('https://schema.org/')
EXemail = EX.email
EXfullname = EX.fullname
EXgivenname = EX.givenname
EXfamilyname =  EX.familyname
g.add((UriJane, EXemail, email))
g.add((UriJane, EXfullname, fullName))
g.add((UriJane, EXgivenname, givenname))
g.add((UriJane, EXfamilyname, familyname))
for s,p,o in g:
  print(s,p,o)

"""**TASK 6.5: Add UPM as the university where John Smith works. Use the "https://example.org/ namespace**"""

UPM = Literal('UPM')
EX =  Namespace("https://example.org/")
EX2 = Namespace('http://somewhere#')
UriUPM = EX.UPM
g.add((UriUPM, RDF.type, ns1.University))
g.add((EX2.JognSmith, EX.works, UriUPM))
for s,p,o in g:
  print(s,p,o)
# Visualize the results

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

Jown = Literal('Jown')
EX = Namespace('https://example.org/')
UriJown = EX.Jown
g.add((UriJown, RDF.type, ns2.person))
EX2 = Namespace('http://xmlns.com/foaf/spec/#')
g.add((UriJown,EX2.term_knows,UriJane))
for s,p,o in g:
  print(s,p,o)

# Visualize the results