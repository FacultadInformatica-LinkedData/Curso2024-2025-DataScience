# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QbprOFcoOG09YgZ4B6QpIGAUOcZgSjZF

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results

#for r in g.query(q1):
#  print(r)
q1 = """
    SELECT ?subclass WHERE {
        ?subclass rdfs:subClassOf <http://somewhere#LivingThing> .
    }
"""


for r in g.query(q1):
    print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

q2 = """
    SELECT ?individual WHERE {
        ?individual rdf:type/rdfs:subClassOf* <http://somewhere#Person> .
    }
"""

# Execute the query
for r in g.query(q2):
    print(r)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

q3 = """
    SELECT ?individual WHERE {
        ?individual rdf:type ?type .
        FILTER (?type = <http://somewhere#Person> || ?type = <http://somewhere#Animal>)
    }
"""

# Execute the query
for r in g.query(q3):
    print(r)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

# TO DO
# Visualize the results
q4 = """
    PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0/>
    SELECT ?name WHERE {
        ?person rdf:type ?type .
        ?person foaf:knows ns:RockySmith .
        ?person vcard:FN ?name .
    }
"""

# Execute the query
for r in g.query(q4):
    print(r)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

q5 = """
    PREFIX foaf: <http://xmlns.com/foaf/0.1/>
    SELECT ?name WHERE {
        ?animal rdf:type <http://somewhere#Animal> .
        ?animal foaf:knows ?otherAnimal .
        ?otherAnimal rdf:type <http://somewhere#Animal> .
        ?animal foaf:name ?name .
    }
"""

# Execute the query
for r in g.query(q5):
    print(r)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

q6 = """
    SELECT ?livingThing ?age WHERE {
        ?livingThing rdf:type <http://somewhere#LivingThing> .
        ?livingThing <http://somewhere#age> ?age .
    }
    ORDER BY DESC(?age)
"""

# Execute the query
for r in g.query(q6):
    print(r)