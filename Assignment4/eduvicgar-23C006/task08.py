# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17AS48dfJjxN27X6Frm1xgSV-CCaYNzqv

**Task 08: Completing missing data**
"""

# !pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas.

Primero listamos todos los elementos de la clase Person en data01.rdf. Usaremos consultas SPARQL:
"""

from rdflib.plugins.sparql import prepareQuery
from rdflib.namespace import RDF
ns = Namespace("http://data.org#")
q1 = prepareQuery('''
  SELECT ?person WHERE {
    ?person rdf:type :Person .
  }
''',
  initNs = {"rdf": RDF, "": ns})

for r in g1.query(q1):
  print(r.person)

"""Ahora vemos que campos tiene cada elemento de la clase Person. Esta vez iteraremos el grafo:"""

vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("\n")
print("Personas con elemento given")
for s, p, o in g1.triples((None, vcard.Given, None)):
  print(s, o)
print("\nPersonas con elemento family")
for s, p, o in g1.triples((None, vcard.Family, None)):
  print(s, o)
print("\nPersonas con elemento email")
for s, p, o in g1.triples((None, vcard.EMAIL, None)):
  print(s, o)

"""Vemos que John Doe y Sara Jones no tienen el campo given, John Smith y Sara Jones no tienen el campo family y Sara Jones y Harry Potter no tienen el campo email.

Sabiendo que el grafo g2 tiene todos los datos que necesitamos para completar g1, usaremos las tripletas de g2 para completar g1.

Guardamos las tripletas con los campos de cada persona de g2 en una lista.
"""

listaTripletas = []

for s, p, o in g2.triples((None, vcard.Given, None)):
  listaTripletas.append((s, p, o))
for s, p, o in g2.triples((None, vcard.Family, None)):
  listaTripletas.append((s, p, o))
for s, p, o in g2.triples((None, vcard.EMAIL, None)):
  listaTripletas.append((s, p, o))

"""Y las a√±adimos a g1."""

for tripleta in listaTripletas:
  g1.add(tripleta)

"""Ahora todos los datos que estaban en g2 y faltaban en g1 ya se encuentran incluidos en g1. Podemos serializar los grafos para ver que esto es cierto."""

print("\n")
print(g1.serialize(format="ttl"))

print(g2.serialize(format="ttl"))